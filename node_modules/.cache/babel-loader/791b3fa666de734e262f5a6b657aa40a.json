{"ast":null,"code":"var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'menos de um segundo',\n    other: 'menos de {{count}} segundos'\n  },\n  xSeconds: {\n    one: '1 segundo',\n    other: '{{count}} segundos'\n  },\n  halfAMinute: 'meio minuto',\n  lessThanXMinutes: {\n    one: 'menos de um minuto',\n    other: 'menos de {{count}} minutos'\n  },\n  xMinutes: {\n    one: '1 minuto',\n    other: '{{count}} minutos'\n  },\n  aboutXHours: {\n    one: 'cerca de 1 hora',\n    other: 'cerca de {{count}} horas'\n  },\n  xHours: {\n    one: '1 hora',\n    other: '{{count}} horas'\n  },\n  xDays: {\n    one: '1 dia',\n    other: '{{count}} dias'\n  },\n  aboutXWeeks: {\n    one: 'cerca de 1 mês',\n    other: 'cerca de {{count}} meses'\n  },\n  xWeeks: {\n    one: '1 mês',\n    other: '{{count}} meses'\n  },\n  aboutXMonths: {\n    one: 'cerca de 1 mês',\n    other: 'cerca de {{count}} meses'\n  },\n  xMonths: {\n    one: '1 mês',\n    other: '{{count}} meses'\n  },\n  aboutXYears: {\n    one: 'cerca de 1 ano',\n    other: 'cerca de {{count}} anos'\n  },\n  xYears: {\n    one: '1 ano',\n    other: '{{count}} anos'\n  },\n  overXYears: {\n    one: 'mais de 1 ano',\n    other: 'mais de {{count}} anos'\n  },\n  almostXYears: {\n    one: 'quase 1 ano',\n    other: 'quase {{count}} anos'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'em ' + result;\n    } else {\n      return 'há ' + result;\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Sistemas/appthinkfornecedores/node_modules/date-fns/esm/locale/pt-BR/_lib/formatDistance/index.js"],"names":["formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","options","result","replace","addSuffix","comparison"],"mappings":"AAAA,IAAIA,oBAAoB,GAAG;AACzBC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,GAAG,EAAE,qBADW;AAEhBC,IAAAA,KAAK,EAAE;AAFS,GADO;AAKzBC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,GAAG,EAAE,WADG;AAERC,IAAAA,KAAK,EAAE;AAFC,GALe;AASzBE,EAAAA,WAAW,EAAE,aATY;AAUzBC,EAAAA,gBAAgB,EAAE;AAChBJ,IAAAA,GAAG,EAAE,oBADW;AAEhBC,IAAAA,KAAK,EAAE;AAFS,GAVO;AAczBI,EAAAA,QAAQ,EAAE;AACRL,IAAAA,GAAG,EAAE,UADG;AAERC,IAAAA,KAAK,EAAE;AAFC,GAde;AAkBzBK,EAAAA,WAAW,EAAE;AACXN,IAAAA,GAAG,EAAE,iBADM;AAEXC,IAAAA,KAAK,EAAE;AAFI,GAlBY;AAsBzBM,EAAAA,MAAM,EAAE;AACNP,IAAAA,GAAG,EAAE,QADC;AAENC,IAAAA,KAAK,EAAE;AAFD,GAtBiB;AA0BzBO,EAAAA,KAAK,EAAE;AACLR,IAAAA,GAAG,EAAE,OADA;AAELC,IAAAA,KAAK,EAAE;AAFF,GA1BkB;AA8BzBQ,EAAAA,WAAW,EAAE;AACXT,IAAAA,GAAG,EAAE,gBADM;AAEXC,IAAAA,KAAK,EAAE;AAFI,GA9BY;AAkCzBS,EAAAA,MAAM,EAAE;AACNV,IAAAA,GAAG,EAAE,OADC;AAENC,IAAAA,KAAK,EAAE;AAFD,GAlCiB;AAsCzBU,EAAAA,YAAY,EAAE;AACZX,IAAAA,GAAG,EAAE,gBADO;AAEZC,IAAAA,KAAK,EAAE;AAFK,GAtCW;AA0CzBW,EAAAA,OAAO,EAAE;AACPZ,IAAAA,GAAG,EAAE,OADE;AAEPC,IAAAA,KAAK,EAAE;AAFA,GA1CgB;AA8CzBY,EAAAA,WAAW,EAAE;AACXb,IAAAA,GAAG,EAAE,gBADM;AAEXC,IAAAA,KAAK,EAAE;AAFI,GA9CY;AAkDzBa,EAAAA,MAAM,EAAE;AACNd,IAAAA,GAAG,EAAE,OADC;AAENC,IAAAA,KAAK,EAAE;AAFD,GAlDiB;AAsDzBc,EAAAA,UAAU,EAAE;AACVf,IAAAA,GAAG,EAAE,eADK;AAEVC,IAAAA,KAAK,EAAE;AAFG,GAtDa;AA0DzBe,EAAAA,YAAY,EAAE;AACZhB,IAAAA,GAAG,EAAE,aADO;AAEZC,IAAAA,KAAK,EAAE;AAFK;AA1DW,CAA3B;AA+DA,eAAe,SAASgB,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,OAAtC,EAA+C;AAC5DA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIC,MAAJ;;AAEA,MAAI,OAAOvB,oBAAoB,CAACoB,KAAD,CAA3B,KAAuC,QAA3C,EAAqD;AACnDG,IAAAA,MAAM,GAAGvB,oBAAoB,CAACoB,KAAD,CAA7B;AACD,GAFD,MAEO,IAAIC,KAAK,KAAK,CAAd,EAAiB;AACtBE,IAAAA,MAAM,GAAGvB,oBAAoB,CAACoB,KAAD,CAApB,CAA4BlB,GAArC;AACD,GAFM,MAEA;AACLqB,IAAAA,MAAM,GAAGvB,oBAAoB,CAACoB,KAAD,CAApB,CAA4BjB,KAA5B,CAAkCqB,OAAlC,CAA0C,WAA1C,EAAuDH,KAAvD,CAAT;AACD;;AAED,MAAIC,OAAO,CAACG,SAAZ,EAAuB;AACrB,QAAIH,OAAO,CAACI,UAAR,GAAqB,CAAzB,EAA4B;AAC1B,aAAO,QAAQH,MAAf;AACD,KAFD,MAEO;AACL,aAAO,QAAQA,MAAf;AACD;AACF;;AAED,SAAOA,MAAP;AACD","sourcesContent":["var formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: 'menos de um segundo',\r\n    other: 'menos de {{count}} segundos'\r\n  },\r\n  xSeconds: {\r\n    one: '1 segundo',\r\n    other: '{{count}} segundos'\r\n  },\r\n  halfAMinute: 'meio minuto',\r\n  lessThanXMinutes: {\r\n    one: 'menos de um minuto',\r\n    other: 'menos de {{count}} minutos'\r\n  },\r\n  xMinutes: {\r\n    one: '1 minuto',\r\n    other: '{{count}} minutos'\r\n  },\r\n  aboutXHours: {\r\n    one: 'cerca de 1 hora',\r\n    other: 'cerca de {{count}} horas'\r\n  },\r\n  xHours: {\r\n    one: '1 hora',\r\n    other: '{{count}} horas'\r\n  },\r\n  xDays: {\r\n    one: '1 dia',\r\n    other: '{{count}} dias'\r\n  },\r\n  aboutXWeeks: {\r\n    one: 'cerca de 1 mês',\r\n    other: 'cerca de {{count}} meses'\r\n  },\r\n  xWeeks: {\r\n    one: '1 mês',\r\n    other: '{{count}} meses'\r\n  },\r\n  aboutXMonths: {\r\n    one: 'cerca de 1 mês',\r\n    other: 'cerca de {{count}} meses'\r\n  },\r\n  xMonths: {\r\n    one: '1 mês',\r\n    other: '{{count}} meses'\r\n  },\r\n  aboutXYears: {\r\n    one: 'cerca de 1 ano',\r\n    other: 'cerca de {{count}} anos'\r\n  },\r\n  xYears: {\r\n    one: '1 ano',\r\n    other: '{{count}} anos'\r\n  },\r\n  overXYears: {\r\n    one: 'mais de 1 ano',\r\n    other: 'mais de {{count}} anos'\r\n  },\r\n  almostXYears: {\r\n    one: 'quase 1 ano',\r\n    other: 'quase {{count}} anos'\r\n  }\r\n};\r\nexport default function formatDistance(token, count, options) {\r\n  options = options || {};\r\n  var result;\r\n\r\n  if (typeof formatDistanceLocale[token] === 'string') {\r\n    result = formatDistanceLocale[token];\r\n  } else if (count === 1) {\r\n    result = formatDistanceLocale[token].one;\r\n  } else {\r\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\r\n  }\r\n\r\n  if (options.addSuffix) {\r\n    if (options.comparison > 0) {\r\n      return 'em ' + result;\r\n    } else {\r\n      return 'há ' + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n}"]},"metadata":{},"sourceType":"module"}