{"ast":null,"code":"import isSameUTCWeek from '../../../../_lib/isSameUTCWeek/index.js';\nvar adjectivesLastWeek = {\n  masculine: 'ostatni',\n  feminine: 'ostatnia'\n};\nvar adjectivesThisWeek = {\n  masculine: 'ten',\n  feminine: 'ta'\n};\nvar adjectivesNextWeek = {\n  masculine: 'następny',\n  feminine: 'następna'\n};\nvar dayGrammaticalGender = {\n  0: 'feminine',\n  1: 'masculine',\n  2: 'masculine',\n  3: 'feminine',\n  4: 'masculine',\n  5: 'masculine',\n  6: 'feminine'\n};\n\nfunction getAdjectives(token, date, baseDate, options) {\n  if (isSameUTCWeek(date, baseDate, options)) {\n    return adjectivesThisWeek;\n  } else if (token === 'lastWeek') {\n    return adjectivesLastWeek;\n  } else if (token === 'nextWeek') {\n    return adjectivesNextWeek;\n  } else {\n    throw new Error(\"Cannot determine adjectives for token \".concat(token));\n  }\n}\n\nfunction getAdjective(token, date, baseDate, options) {\n  var day = date.getUTCDay();\n  var adjectives = getAdjectives(token, date, baseDate, options);\n  var grammaticalGender = dayGrammaticalGender[day];\n  return adjectives[grammaticalGender];\n}\n\nfunction dayAndTimeWithAdjective(token, date, baseDate, options) {\n  var adjective = getAdjective(token, date, baseDate, options);\n  return \"'\".concat(adjective, \"' eeee 'o' p\");\n}\n\nvar formatRelativeLocale = {\n  lastWeek: dayAndTimeWithAdjective,\n  yesterday: \"'wczoraj o' p\",\n  today: \"'dzisiaj o' p\",\n  tomorrow: \"'jutro o' p\",\n  nextWeek: dayAndTimeWithAdjective,\n  other: 'P'\n};\nexport default function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(token, date, baseDate, options);\n  }\n\n  return format;\n}","map":{"version":3,"sources":["C:/Sistemas/appthinkfornecedores/node_modules/date-fns/esm/locale/pl/_lib/formatRelative/index.js"],"names":["isSameUTCWeek","adjectivesLastWeek","masculine","feminine","adjectivesThisWeek","adjectivesNextWeek","dayGrammaticalGender","getAdjectives","token","date","baseDate","options","Error","concat","getAdjective","day","getUTCDay","adjectives","grammaticalGender","dayAndTimeWithAdjective","adjective","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","other","formatRelative","format"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,yCAA1B;AACA,IAAIC,kBAAkB,GAAG;AACvBC,EAAAA,SAAS,EAAE,SADY;AAEvBC,EAAAA,QAAQ,EAAE;AAFa,CAAzB;AAIA,IAAIC,kBAAkB,GAAG;AACvBF,EAAAA,SAAS,EAAE,KADY;AAEvBC,EAAAA,QAAQ,EAAE;AAFa,CAAzB;AAIA,IAAIE,kBAAkB,GAAG;AACvBH,EAAAA,SAAS,EAAE,UADY;AAEvBC,EAAAA,QAAQ,EAAE;AAFa,CAAzB;AAIA,IAAIG,oBAAoB,GAAG;AACzB,KAAG,UADsB;AAEzB,KAAG,WAFsB;AAGzB,KAAG,WAHsB;AAIzB,KAAG,UAJsB;AAKzB,KAAG,WALsB;AAMzB,KAAG,WANsB;AAOzB,KAAG;AAPsB,CAA3B;;AAUA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,QAApC,EAA8CC,OAA9C,EAAuD;AACrD,MAAIX,aAAa,CAACS,IAAD,EAAOC,QAAP,EAAiBC,OAAjB,CAAjB,EAA4C;AAC1C,WAAOP,kBAAP;AACD,GAFD,MAEO,IAAII,KAAK,KAAK,UAAd,EAA0B;AAC/B,WAAOP,kBAAP;AACD,GAFM,MAEA,IAAIO,KAAK,KAAK,UAAd,EAA0B;AAC/B,WAAOH,kBAAP;AACD,GAFM,MAEA;AACL,UAAM,IAAIO,KAAJ,CAAU,yCAAyCC,MAAzC,CAAgDL,KAAhD,CAAV,CAAN;AACD;AACF;;AAED,SAASM,YAAT,CAAsBN,KAAtB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6CC,OAA7C,EAAsD;AACpD,MAAII,GAAG,GAAGN,IAAI,CAACO,SAAL,EAAV;AACA,MAAIC,UAAU,GAAGV,aAAa,CAACC,KAAD,EAAQC,IAAR,EAAcC,QAAd,EAAwBC,OAAxB,CAA9B;AACA,MAAIO,iBAAiB,GAAGZ,oBAAoB,CAACS,GAAD,CAA5C;AACA,SAAOE,UAAU,CAACC,iBAAD,CAAjB;AACD;;AAED,SAASC,uBAAT,CAAiCX,KAAjC,EAAwCC,IAAxC,EAA8CC,QAA9C,EAAwDC,OAAxD,EAAiE;AAC/D,MAAIS,SAAS,GAAGN,YAAY,CAACN,KAAD,EAAQC,IAAR,EAAcC,QAAd,EAAwBC,OAAxB,CAA5B;AACA,SAAO,IAAIE,MAAJ,CAAWO,SAAX,EAAsB,cAAtB,CAAP;AACD;;AAED,IAAIC,oBAAoB,GAAG;AACzBC,EAAAA,QAAQ,EAAEH,uBADe;AAEzBI,EAAAA,SAAS,EAAE,eAFc;AAGzBC,EAAAA,KAAK,EAAE,eAHkB;AAIzBC,EAAAA,QAAQ,EAAE,aAJe;AAKzBC,EAAAA,QAAQ,EAAEP,uBALe;AAMzBQ,EAAAA,KAAK,EAAE;AANkB,CAA3B;AAQA,eAAe,SAASC,cAAT,CAAwBpB,KAAxB,EAA+BC,IAA/B,EAAqCC,QAArC,EAA+CC,OAA/C,EAAwD;AACrE,MAAIkB,MAAM,GAAGR,oBAAoB,CAACb,KAAD,CAAjC;;AAEA,MAAI,OAAOqB,MAAP,KAAkB,UAAtB,EAAkC;AAChC,WAAOA,MAAM,CAACrB,KAAD,EAAQC,IAAR,EAAcC,QAAd,EAAwBC,OAAxB,CAAb;AACD;;AAED,SAAOkB,MAAP;AACD","sourcesContent":["import isSameUTCWeek from '../../../../_lib/isSameUTCWeek/index.js';\r\nvar adjectivesLastWeek = {\r\n  masculine: 'ostatni',\r\n  feminine: 'ostatnia'\r\n};\r\nvar adjectivesThisWeek = {\r\n  masculine: 'ten',\r\n  feminine: 'ta'\r\n};\r\nvar adjectivesNextWeek = {\r\n  masculine: 'następny',\r\n  feminine: 'następna'\r\n};\r\nvar dayGrammaticalGender = {\r\n  0: 'feminine',\r\n  1: 'masculine',\r\n  2: 'masculine',\r\n  3: 'feminine',\r\n  4: 'masculine',\r\n  5: 'masculine',\r\n  6: 'feminine'\r\n};\r\n\r\nfunction getAdjectives(token, date, baseDate, options) {\r\n  if (isSameUTCWeek(date, baseDate, options)) {\r\n    return adjectivesThisWeek;\r\n  } else if (token === 'lastWeek') {\r\n    return adjectivesLastWeek;\r\n  } else if (token === 'nextWeek') {\r\n    return adjectivesNextWeek;\r\n  } else {\r\n    throw new Error(\"Cannot determine adjectives for token \".concat(token));\r\n  }\r\n}\r\n\r\nfunction getAdjective(token, date, baseDate, options) {\r\n  var day = date.getUTCDay();\r\n  var adjectives = getAdjectives(token, date, baseDate, options);\r\n  var grammaticalGender = dayGrammaticalGender[day];\r\n  return adjectives[grammaticalGender];\r\n}\r\n\r\nfunction dayAndTimeWithAdjective(token, date, baseDate, options) {\r\n  var adjective = getAdjective(token, date, baseDate, options);\r\n  return \"'\".concat(adjective, \"' eeee 'o' p\");\r\n}\r\n\r\nvar formatRelativeLocale = {\r\n  lastWeek: dayAndTimeWithAdjective,\r\n  yesterday: \"'wczoraj o' p\",\r\n  today: \"'dzisiaj o' p\",\r\n  tomorrow: \"'jutro o' p\",\r\n  nextWeek: dayAndTimeWithAdjective,\r\n  other: 'P'\r\n};\r\nexport default function formatRelative(token, date, baseDate, options) {\r\n  var format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === 'function') {\r\n    return format(token, date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n}"]},"metadata":{},"sourceType":"module"}