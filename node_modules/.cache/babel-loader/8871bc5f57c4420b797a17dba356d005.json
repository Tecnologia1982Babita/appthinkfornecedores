{"ast":null,"code":"import isSameUTCWeek from '../../../../_lib/isSameUTCWeek/index.js'; // Adapted from the `ru` translation\n\nvar weekdays = ['неделя', 'понеделник', 'вторник', 'сряда', 'четвъртък', 'петък', 'събота'];\n\nfunction lastWeek(day) {\n  var weekday = weekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'миналата \" + weekday + \" в' p\";\n\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'миналия \" + weekday + \" в' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  var weekday = weekdays[day];\n\n  if (day === 2\n  /* Tue */\n  ) {\n      return \"'във \" + weekday + \" в' p\";\n    } else {\n    return \"'в \" + weekday + \" в' p\";\n  }\n}\n\nfunction nextWeek(day) {\n  var weekday = weekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'следващата \" + weekday + \" в' p\";\n\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'следващия \" + weekday + \" в' p\";\n  }\n}\n\nvar formatRelativeLocale = {\n  lastWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'вчера в' p\",\n  today: \"'днес в' p\",\n  tomorrow: \"'утре в' p\",\n  nextWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: 'P'\n};\nexport default function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n}","map":{"version":3,"sources":["C:/Sistemas/appthinkfornecedores/node_modules/date-fns/esm/locale/bg/_lib/formatRelative/index.js"],"names":["isSameUTCWeek","weekdays","lastWeek","day","weekday","thisWeek","nextWeek","formatRelativeLocale","date","baseDate","options","getUTCDay","yesterday","today","tomorrow","other","formatRelative","token","format"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,yCAA1B,C,CAAqE;;AAErE,IAAIC,QAAQ,GAAG,CAAC,QAAD,EAAW,YAAX,EAAyB,SAAzB,EAAoC,OAApC,EAA6C,WAA7C,EAA0D,OAA1D,EAAmE,QAAnE,CAAf;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,MAAIC,OAAO,GAAGH,QAAQ,CAACE,GAAD,CAAtB;;AAEA,UAAQA,GAAR;AACE,SAAK,CAAL;AACA,SAAK,CAAL;AACA,SAAK,CAAL;AACE,aAAO,eAAeC,OAAf,GAAyB,OAAhC;;AAEF,SAAK,CAAL;AACA,SAAK,CAAL;AACA,SAAK,CAAL;AACA,SAAK,CAAL;AACE,aAAO,cAAcA,OAAd,GAAwB,OAA/B;AAVJ;AAYD;;AAED,SAASC,QAAT,CAAkBF,GAAlB,EAAuB;AACrB,MAAIC,OAAO,GAAGH,QAAQ,CAACE,GAAD,CAAtB;;AAEA,MAAIA,GAAG,KAAK;AACZ;AADA,IAEE;AACE,aAAO,UAAUC,OAAV,GAAoB,OAA3B;AACD,KAJH,MAIS;AACP,WAAO,QAAQA,OAAR,GAAkB,OAAzB;AACD;AACF;;AAED,SAASE,QAAT,CAAkBH,GAAlB,EAAuB;AACrB,MAAIC,OAAO,GAAGH,QAAQ,CAACE,GAAD,CAAtB;;AAEA,UAAQA,GAAR;AACE,SAAK,CAAL;AACA,SAAK,CAAL;AACA,SAAK,CAAL;AACE,aAAO,iBAAiBC,OAAjB,GAA2B,OAAlC;;AAEF,SAAK,CAAL;AACA,SAAK,CAAL;AACA,SAAK,CAAL;AACA,SAAK,CAAL;AACE,aAAO,gBAAgBA,OAAhB,GAA0B,OAAjC;AAVJ;AAYD;;AAED,IAAIG,oBAAoB,GAAG;AACzBL,EAAAA,QAAQ,EAAE,UAAUM,IAAV,EAAgBC,QAAhB,EAA0BC,OAA1B,EAAmC;AAC3C,QAAIP,GAAG,GAAGK,IAAI,CAACG,SAAL,EAAV;;AAEA,QAAIX,aAAa,CAACQ,IAAD,EAAOC,QAAP,EAAiBC,OAAjB,CAAjB,EAA4C;AAC1C,aAAOL,QAAQ,CAACF,GAAD,CAAf;AACD,KAFD,MAEO;AACL,aAAOD,QAAQ,CAACC,GAAD,CAAf;AACD;AACF,GATwB;AAUzBS,EAAAA,SAAS,EAAE,aAVc;AAWzBC,EAAAA,KAAK,EAAE,YAXkB;AAYzBC,EAAAA,QAAQ,EAAE,YAZe;AAazBR,EAAAA,QAAQ,EAAE,UAAUE,IAAV,EAAgBC,QAAhB,EAA0BC,OAA1B,EAAmC;AAC3C,QAAIP,GAAG,GAAGK,IAAI,CAACG,SAAL,EAAV;;AAEA,QAAIX,aAAa,CAACQ,IAAD,EAAOC,QAAP,EAAiBC,OAAjB,CAAjB,EAA4C;AAC1C,aAAOL,QAAQ,CAACF,GAAD,CAAf;AACD,KAFD,MAEO;AACL,aAAOG,QAAQ,CAACH,GAAD,CAAf;AACD;AACF,GArBwB;AAsBzBY,EAAAA,KAAK,EAAE;AAtBkB,CAA3B;AAwBA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+BT,IAA/B,EAAqCC,QAArC,EAA+CC,OAA/C,EAAwD;AACrE,MAAIQ,MAAM,GAAGX,oBAAoB,CAACU,KAAD,CAAjC;;AAEA,MAAI,OAAOC,MAAP,KAAkB,UAAtB,EAAkC;AAChC,WAAOA,MAAM,CAACV,IAAD,EAAOC,QAAP,EAAiBC,OAAjB,CAAb;AACD;;AAED,SAAOQ,MAAP;AACD","sourcesContent":["import isSameUTCWeek from '../../../../_lib/isSameUTCWeek/index.js'; // Adapted from the `ru` translation\r\n\r\nvar weekdays = ['неделя', 'понеделник', 'вторник', 'сряда', 'четвъртък', 'петък', 'събота'];\r\n\r\nfunction lastWeek(day) {\r\n  var weekday = weekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n    case 3:\r\n    case 6:\r\n      return \"'миналата \" + weekday + \" в' p\";\r\n\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n    case 5:\r\n      return \"'миналия \" + weekday + \" в' p\";\r\n  }\r\n}\r\n\r\nfunction thisWeek(day) {\r\n  var weekday = weekdays[day];\r\n\r\n  if (day === 2\r\n  /* Tue */\r\n  ) {\r\n      return \"'във \" + weekday + \" в' p\";\r\n    } else {\r\n    return \"'в \" + weekday + \" в' p\";\r\n  }\r\n}\r\n\r\nfunction nextWeek(day) {\r\n  var weekday = weekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n    case 3:\r\n    case 6:\r\n      return \"'следващата \" + weekday + \" в' p\";\r\n\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n    case 5:\r\n      return \"'следващия \" + weekday + \" в' p\";\r\n  }\r\n}\r\n\r\nvar formatRelativeLocale = {\r\n  lastWeek: function (date, baseDate, options) {\r\n    var day = date.getUTCDay();\r\n\r\n    if (isSameUTCWeek(date, baseDate, options)) {\r\n      return thisWeek(day);\r\n    } else {\r\n      return lastWeek(day);\r\n    }\r\n  },\r\n  yesterday: \"'вчера в' p\",\r\n  today: \"'днес в' p\",\r\n  tomorrow: \"'утре в' p\",\r\n  nextWeek: function (date, baseDate, options) {\r\n    var day = date.getUTCDay();\r\n\r\n    if (isSameUTCWeek(date, baseDate, options)) {\r\n      return thisWeek(day);\r\n    } else {\r\n      return nextWeek(day);\r\n    }\r\n  },\r\n  other: 'P'\r\n};\r\nexport default function formatRelative(token, date, baseDate, options) {\r\n  var format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === 'function') {\r\n    return format(date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n}"]},"metadata":{},"sourceType":"module"}